{
    "create": "INSERT INTO posts (userId, content, imageUrl) VALUES (?, ?, ?); SELECT LAST_INSERT_ID() AS 'postId'",
    "create_tmp": "INSERT INTO posts (userId, content, imageUrl) VALUES (?, ?, ?)",
    "getOne": "SELECT p.id, p.userId, us.imageUrl AS 'userImage', CONCAT(us.firstName,' ',us.lastName) AS 'user', p.content, p.imageUrl, p.postDate, SUM(CASE l.value WHEN 1 THEN 1 ELSE 0 END) AS 'likes', SUM(CASE l.value WHEN -1 THEN 1 ELSE 0 END) AS 'dislikes', COALESCE(c.comments,0) AS 'comments', SUM(CASE l.userId WHEN ? THEN l.value ELSE 0 END) AS 'currentUserLike' FROM posts p LEFT JOIN likes l ON l.postId = p.id LEFT JOIN (SELECT postId, COUNT(id) AS 'comments' FROM comments GROUP BY postId) AS c ON c.postId = p.id LEFT JOIN users us ON us.id = p.userId WHERE p.id=? GROUP BY p.id",
    "getAll": {
        "withFilter": "SELECT p.id, p.userId, COALESCE(us.imageUrl,'') AS 'userImage', COALESCE(us.firstName,'') AS 'firstName', COALESCE(us.lastName, '') AS 'lastName', p.content, p.imageUrl, TIMESTAMPDIFF(MINUTE, DATE_FORMAT(p.postDate, '%Y-%m-%d %H:%i:%s'), DATE_FORMAT(NOW(), '%Y-%m-%d %H:%i:%s')) AS 'postDateM', TIMESTAMPDIFF(HOUR, DATE_FORMAT(p.postDate, '%Y-%m-%d %H:%i:%s'), DATE_FORMAT(NOW(), '%Y-%m-%d %H:%i:%s')) AS 'postDateH', TIMESTAMPDIFF(DAY, DATE_FORMAT(p.postDate, '%Y-%m-%d %H:%i:%s'), DATE_FORMAT(NOW(), '%Y-%m-%d %H:%i:%s')) AS 'postDateD', SUM(CASE l.value WHEN 1 THEN 1 ELSE 0 END) AS 'likes', SUM(CASE l.value WHEN -1 THEN 1 ELSE 0 END) AS 'dislikes', COALESCE(c.comments,0) AS 'comments', SUM(CASE l.userId WHEN ? THEN l.value ELSE 0 END) AS 'currentUserLike' FROM posts p LEFT JOIN likes l ON l.postId = p.id LEFT JOIN (SELECT postId, COUNT(id) AS 'comments' FROM comments GROUP BY postId) AS c ON c.postId = p.id LEFT JOIN users us ON us.id = p.userId WHERE p.userId = ? GROUP BY p.id ORDER BY p.postDate DESC",
        "noFilter": "SELECT p.id, p.userId, COALESCE(us.imageUrl,'') AS 'userImage', COALESCE(us.firstName,'') AS 'firstName', COALESCE(us.lastName, '') AS 'lastName', p.content, p.imageUrl, TIMESTAMPDIFF(MINUTE, DATE_FORMAT(p.postDate, '%Y-%m-%d %H:%i:%s'), DATE_FORMAT(NOW(), '%Y-%m-%d %H:%i:%s')) AS 'postDateM', TIMESTAMPDIFF(HOUR, DATE_FORMAT(p.postDate, '%Y-%m-%d %H:%i:%s'), DATE_FORMAT(NOW(), '%Y-%m-%d %H:%i:%s')) AS 'postDateH', TIMESTAMPDIFF(DAY, DATE_FORMAT(p.postDate, '%Y-%m-%d %H:%i:%s'), DATE_FORMAT(NOW(), '%Y-%m-%d %H:%i:%s')) AS 'postDateD', SUM(CASE l.value WHEN 1 THEN 1 ELSE 0 END) AS 'likes', SUM(CASE l.value WHEN -1 THEN 1 ELSE 0 END) AS 'dislikes', COALESCE(c.comments,0) AS 'comments', SUM(CASE l.userId WHEN ? THEN l.value ELSE 0 END) AS 'currentUserLike' FROM posts p LEFT JOIN likes l ON l.postId = p.id LEFT JOIN (SELECT postId, COUNT(id) AS 'comments' FROM comments GROUP BY postId) AS c ON c.postId = p.id LEFT JOIN users us ON us.id = p.userId GROUP BY p.id ORDER BY p.postDate DESC"
    },
    "update": {
        "check": {
            "notAdmin": "SELECT imageUrl FROM posts WHERE id=? && userId = ? LIMIT 1",
            "isAdmin": "SELECT imageUrl FROM posts WHERE id=? LIMIT 1"
        },
        "update": "UPDATE posts SET content=?, imageUrl=? WHERE id=?"
    },
    "delete": {
        "check": {
            "notAdmin": "SELECT imageUrl FROM posts WHERE id=? && userId = ? LIMIT 1",
            "isAdmin": "SELECT imageUrl FROM posts WHERE id=? LIMIT 1"
        },
        "delete": "DELETE FROM posts WHERE id=?"
    }
}